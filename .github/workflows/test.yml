on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    container: node:lts
    services:
      database:
        image: postgres:13
      ports:
        - 5432:5432
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: USER_API
      options: >-
        --health-cmd pg_isready
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5
      
      redis:
        image: redis
        ports:
        - 6379:6379
        options: >-
          --entrypoint redis-server 
    env:
      SERVER: ${{ secrets.SERVER }}
      PORT: ${{ secrets.PORT }}
      SALT: ${{ secrets.SALT }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      SUPER_USER_EMAIL: ${{ secrets.SUPER_USER_EMAIL }}
      SUPER_USER_NAME: ${{ secrets.SUPER_USER_NAME }}
      SUPER_USER_PASSWORD: ${{ secrets.SUPER_USER_PASSWORD }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASS: ${{ secrets.REDIS_PASS }}
      REDIS_DB: ${{ secrets.REDIS_DB }}
      REDIS_EXPIRATION_MODE: ${{ secrets.REDIS_EXPIRATION_MODE }}
      REDIS_TIME_TO_EXPIRE: ${{ secrets.REDIS_TIME_TO_EXPIRE }}
    strategy:
      max-parallel: 4
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: yarn
      - run: yarn test
        env:
          DATABASE_NAME: USER_API
          DATABASE_USER: postgres
          DATABASE_PASS: postgres
          DATABASE_PORT: 5432
          DATABASE_HOST: localhost
          REDIS_HOST: redis
